{"version":3,"sources":["store/actions/location.js","constants/actionTypes.js","assets/imgs/WeatherOverlay.svg","assets/libs/WeatherAnimation.js","commons/Helper.js","constants/api.js","components/WeatherPanel/index.js","constants/weatherType.js","store/actions/weather.js","components/WeatherCard/index.js","components/SearchLocation/index.js","App.js","serviceWorker.js","commons/AxiosService.js","apis/openweathermap.js","apis/freegeoip.js","sagas/rootSaga.js","store/reducers/location.js","store/reducers/weather.js","store/reducers/index.js","store/configStore.js","index.js","components/SearchLocation/style.scss"],"names":["setLocation","location","type","payload","setLocationSuccess","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","title","props","createElement","id","ref","cx","cy","r","gradientUnits","offset","style","stopColor","stopOpacity","fill","d","ForwardRef","forwardRef","WeatherAnimation","weatherType","window","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","lightningTimeout","Power0","Power1","Power2","Power4","SlowMo","$","Snap","TweenMax","container","card","innerSVG","outerSVG","backSVG","summary","weatherContainer1","select","weatherContainer2","weatherContainer3","innerRainHolder","innerRainHolder1","group","innerRainHolder2","innerRainHolder3","innerLeafHolder","innerSnowHolder","leafMask","rect","leaf","sun","sunburst","outerSplashHolder","outerLeafHolder","outerSnowHolder","attr","sizes","width","height","clouds","settings","windSpeed","rainCount","leafCount","snowCount","cloudHeight","cloudSpace","cloudArch","renewCheck","splashBounce","tickCount","rain","leafs","snow","init","onResize","Math","random","drawCloud","set","node","opacity","makeWeather","transformOrigin","x","y","top","fromTo","rotation","repeat","ease","easeInOut","left","tick","makeRain","makeLeaf","makeSnow","transform","cloud","arch","points","push","join","path","animate","makeSplash","splashLength","speed","splashUp","randomX","splashDistance","splash","stroke","strokeWidth","pathLength","getTotalLength","xOffset","yOffset","strokeDasharray","strokeDashoffset","onComplete","onSplashComplete","onCompleteParams","config","remove","lineWidth","lineLength","line","floor","delay","easeIn","onRainEnd","paper","splice","newLeaf","endX","xBezier","scale","areaY","endY","colors","color","clone","appendTo","bezier","onLeafEnd","newSnow","circle","onSnowEnd","to","yoyo","flake","reset","removeClass","weather","data","killTweensOf","addClass","easeOut","startLightningTimer","clearTimeout","lightning","Elastic","pathX","strike","resize","getUnixTime","timestap","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","getIconWeather","icon","WeatherPanel","renderSelectDay","currentDay","getDay","margin","renderTempItem","hourlyWeather","map","item","index","className","dt","alt","src","parseInt","temp","tabs","tabPanels","data-icon","data-inline","hourly","Component","connect","state","WEATHER_CODE","Thunderstorm","Drizzle","Clouds","Rain","Snow","Clear","getWeatherByGeographic","getWeatherByGeographicSuccess","getWeatherByGeographicFail","error","WeatherCard","weatherCode","main","weatherAni","string","description","charAt","toUpperCase","slice","propsTypes","PropTypes","number","dispatch","actionsWeather","bindActionCreators","actWeather","Option","AutoComplete","removeAccents","str","normalize","replace","SearchLocation","renderOptions","cities","capital","value","admin","lat","lng","filterOption","inputValue","option","onSelect","classes","placeholder","allowClear","notFoundContent","App","setCurrentLocation","Boolean","hostname","match","handleSuccess","res","handleError","err","Promise","reject","instance","axios","create","interceptors","response","use","url","get","post","delete","put","AxiosService","getUserLocation","resolve","then","latitude","longitude","status","watchSetCurrentLocation","watchSetLocation","rootSaga","take","locationAction","resTake","resWeather","currentWeather","current","time","fork","initState","reducer","action","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","composeEnhancer","compose","store","middlewares","enhancers","applyMiddleware","createStore","run","initStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.19c6d6be.chunk.js","sourcesContent":["import * as actTypes from \"../../constants/actionTypes\";\r\n\r\nexport const setLocation = (location) => {\r\n  return {\r\n    type: actTypes.SET_LOCATION,\r\n    payload: { location },\r\n  };\r\n};\r\n\r\nexport const setCurrentLocation = () => {\r\n  return {\r\n    type: actTypes.SET_CURRENT_LOCATION,\r\n  };\r\n};\r\n\r\nexport const setLocationSuccess = (location) => {\r\n  return {\r\n    type: actTypes.SET_LOCATION_SUCCESS,\r\n    payload: { location },\r\n  };\r\n};\r\n\r\nexport const setLocationFail = (error) => {\r\n  return {\r\n    type: actTypes.SET_LOCATION_FAIL,\r\n    payload: { error },\r\n  };\r\n};\r\n","export const GET_LOCATION = \"GET_CURRENT_LOCATION\"\r\nexport const SET_LOCATION = \"SET_LOCATION\"\r\nexport const SET_CURRENT_LOCATION = \"SET_CURRENT_LOCATION\"\r\nexport const SET_LOCATION_SUCCESS = \"SET_LOCATION_SUCCESS\"\r\nexport const SET_LOCATION_FAIL = \"SET_LOCATION_FAIL\"\r\nexport const GET_WEATHER_BY_GEOGRAPHIC = \"GET_WEATHER_BY_GEOGRAPHIC\"\r\nexport const GET_WEATHER_BY_GEOGRAPHIC_FAIL = \"GET_WEATHER_BY_GEOGRAPHIC_FAIL\"\r\nexport const GET_WEATHER_BY_GEOGRAPHIC_SUCCESS = \"GET_WEATHER_BY_GEOGRAPHIC_SUCCESS\"","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgWeatherOverlay = function SvgWeatherOverlay(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"back\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"SVGID_1_\",\n    cx: 0,\n    cy: 0,\n    r: 320.8304,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"#FFDE17\",\n      stopOpacity: 0.7\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"#FFF200\",\n      stopOpacity: 0\n    }\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"sunburst\",\n    style: {\n      fill: \"url(#SVGID_1_)\"\n    },\n    d: \"M0,319.7c-18.6,0-37.3-1.6-55.5-4.8L-7.8,41.4c5.1,0.9,10.6,0.9,15.7,0L56,314.8C37.6,318,18.8,319.7,0,319.7z          M-160.8,276.6c-32.5-18.8-61.3-42.9-85.5-71.6L-34,26.2c3.4,4.1,7.4,7.4,12,10.1L-160.8,276.6z M161.3,276.4L22.1,36.2         c4.5-2.6,8.6-6,12-10.1l212.6,178.5C222.5,233.4,193.8,257.6,161.3,276.4z M-302.5,108.3C-315.4,73-321.9,36-322-1.8l277.6-0.5         c0,5.3,0.9,10.4,2.7,15.2L-302.5,108.3z M302.6,107.8L41.8,12.8c1.7-4.7,2.6-9.7,2.6-14.9c0-0.3,0-0.6,0-1H322l0-1.3l0,1.9         C322,35.4,315.5,72.5,302.6,107.8z M-41.8-17.5l-261-94.5c12.8-35.4,31.6-68,55.8-96.9L-34.1-30.8C-37.5-26.8-40.1-22.3-41.8-17.5z          M41.7-17.7c-1.8-4.8-4.4-9.3-7.8-13.3l212-179.2c24.3,28.8,43.3,61.3,56.3,96.6L41.7-17.7z M-22.2-40.8l-139.6-240         c32.7-19,68.1-32,105.2-38.6L-8-46.1C-13-45.2-17.8-43.4-22.2-40.8z M22-40.9c-4.4-2.6-9.2-4.3-14.2-5.1l47.1-273.6         c37.2,6.4,72.7,19.2,105.4,38L22-40.9z\"\n  }));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgWeatherOverlay, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/WeatherOverlay.f52f8fb1.svg\";\nexport { ForwardRef as ReactComponent };","const WeatherAnimation = (weatherType = \"sun\") => {\r\n  window.requestAnimFrame =\r\n    window.requestAnimationFrame ||\r\n    window.webkitRequestAnimationFrame ||\r\n    window.mozRequestAnimationFrame ||\r\n    window.oRequestAnimationFrame ||\r\n    window.msRequestAnimationFrame ||\r\n    function (callback, element) {\r\n      window.setTimeout(callback, 1000 / 60);\r\n    };\r\n\r\n  var { Power0, Power1, Power2, Power4, SlowMo, $, Snap, TweenMax } = window;\r\n\r\n  var container = $(\".container\");\r\n  var card = $(\"#card\");\r\n  var innerSVG = Snap(\"#inner\");\r\n  var outerSVG = Snap(\"#outer\");\r\n  var backSVG = Snap(\"#back\");\r\n  var summary = $(\"#summary\");\r\n  var weatherContainer1 = Snap.select(\"#layer1\");\r\n  var weatherContainer2 = Snap.select(\"#layer2\");\r\n  var weatherContainer3 = Snap.select(\"#layer3\");\r\n  var innerRainHolder = {\r\n    innerRainHolder1: weatherContainer1.group(),\r\n    innerRainHolder2: weatherContainer2.group(),\r\n    innerRainHolder3: weatherContainer3.group(),\r\n  };\r\n  var innerLeafHolder = weatherContainer1.group();\r\n  var innerSnowHolder = weatherContainer1.group();\r\n  var leafMask = outerSVG.rect();\r\n  var leaf = Snap.select(\"#leaf\");\r\n  var sun = Snap.select(\"#sun\");\r\n  var sunburst = Snap.select(\"#sunburst\");\r\n  var outerSplashHolder = outerSVG.group();\r\n  var outerLeafHolder = outerSVG.group();\r\n  var outerSnowHolder = outerSVG.group();\r\n\r\n  var lightningTimeout;\r\n  // Set mask for leaf holder\r\n\r\n  outerLeafHolder.attr({\r\n    \"clip-path\": leafMask,\r\n  });\r\n\r\n  // create sizes object, we update this later\r\n\r\n  var sizes = {\r\n    container: { width: 0, height: 0 },\r\n    card: { width: 0, height: 0 },\r\n  };\r\n\r\n  // grab cloud groups\r\n\r\n  var clouds = [\r\n    { group: Snap.select(\"#cloud1\") },\r\n    { group: Snap.select(\"#cloud2\") },\r\n    { group: Snap.select(\"#cloud3\") },\r\n  ];\r\n\r\n  // 🛠 app settings\r\n  // in an object so the values can be animated in tweenmax\r\n\r\n  var settings = {\r\n    windSpeed: 2,\r\n    rainCount: 0,\r\n    leafCount: 0,\r\n    snowCount: 0,\r\n    cloudHeight: 100,\r\n    cloudSpace: 30,\r\n    cloudArch: 50,\r\n    renewCheck: 10,\r\n    splashBounce: 80,\r\n  };\r\n\r\n  var tickCount = 0;\r\n  var rain = [];\r\n  var leafs = [];\r\n  var snow = [];\r\n\r\n  // ⚙ initialize app\r\n  init();\r\n\r\n  // 👁 watch for window resize\r\n  $(window).resize(onResize);\r\n\r\n  // 🏃 start animations\r\n\r\n  window.requestAnimFrame(tick);\r\n\r\n  function init() {\r\n    onResize();\r\n    // ☁️ draw clouds\r\n    for (let i = 0; i < clouds.length; i++) {\r\n      clouds[i].offset = Math.random() * sizes.card.width;\r\n      drawCloud(clouds[i], i);\r\n    }\r\n\r\n    // ☀️ set initial weather\r\n    TweenMax.set(sunburst.node, { opacity: 0 });\r\n    makeWeather(weatherType);\r\n  }\r\n\r\n  function onResize() {\r\n    // 📏 grab window and card sizes\r\n\r\n    sizes.container.width = container.width();\r\n    sizes.container.height = container.height();\r\n    sizes.card.width = card.width();\r\n    sizes.card.height = card.height();\r\n    sizes.card.offset = card.offset();\r\n\r\n    // 📐 update svg sizes\r\n\r\n    innerSVG.attr({\r\n      width: sizes.card.width,\r\n      height: sizes.card.height,\r\n    });\r\n\r\n    outerSVG.attr({\r\n      width: sizes.container.width,\r\n      height: sizes.container.height,\r\n    });\r\n\r\n    backSVG.attr({\r\n      width: sizes.container.width,\r\n      height: sizes.container.height,\r\n    });\r\n\r\n    TweenMax.set(sunburst.node, {\r\n      transformOrigin: \"50% 50%\",\r\n      x: sizes.container.width / 2,\r\n      y: sizes.card.height / 2 + sizes.card.offset.top,\r\n    });\r\n    TweenMax.fromTo(\r\n      sunburst.node,\r\n      20,\r\n      { rotation: 0 },\r\n      { rotation: 360, repeat: -1, ease: Power0.easeInOut }\r\n    );\r\n    // 🍃 The leaf mask is for the leafs that float out of the\r\n    // container, it is full window height and starts on the left\r\n    // inline with the card\r\n\r\n    leafMask.attr({\r\n      x: sizes.card.offset.left,\r\n      y: 0,\r\n      width: sizes.container.width - sizes.card.offset.left,\r\n      height: sizes.container.height,\r\n    });\r\n  }\r\n\r\n  function tick() {\r\n    tickCount++;\r\n    var check = tickCount % settings.renewCheck;\r\n\r\n    if (check) {\r\n      if (rain.length < settings.rainCount) makeRain();\r\n      if (leafs.length < settings.leafCount) makeLeaf();\r\n      if (snow.length < settings.snowCount) makeSnow();\r\n    }\r\n\r\n    for (var i = 0; i < clouds.length; i++) {\r\n      if (weatherType === \"sun\") {\r\n        if (clouds[i].offset > -(sizes.card.width * 1.5))\r\n          clouds[i].offset += settings.windSpeed / (i + 1);\r\n        if (clouds[i].offset > sizes.card.width * 2.5)\r\n          clouds[i].offset = -(sizes.card.width * 1.5);\r\n        clouds[i].group.transform(\"t\" + clouds[i].offset + \",\" + 0);\r\n      } else {\r\n        clouds[i].offset += settings.windSpeed / (i + 1);\r\n        if (clouds[i].offset > sizes.card.width)\r\n          clouds[i].offset = 0 + (clouds[i].offset - sizes.card.width);\r\n        clouds[i].group.transform(\"t\" + clouds[i].offset + \",\" + 0);\r\n      }\r\n    }\r\n\r\n    window.requestAnimFrame(tick);\r\n  }\r\n\r\n  function drawCloud(cloud, i) {\r\n    /* \r\n        \r\n        ☁️ We want to create a shape thats loopable but that can also\r\n        be animated in and out. So we use Snap SVG to draw a shape\r\n        with 4 sections. The 2 ends and 2 arches the same width as\r\n        the card. So the final shape is about 4 x the width of the\r\n        card.\r\n        \r\n        */\r\n\r\n    var space = settings.cloudSpace * i;\r\n    var height = space + settings.cloudHeight;\r\n    var arch = height + settings.cloudArch + Math.random() * settings.cloudArch;\r\n    var width = sizes.card.width;\r\n\r\n    var points = [];\r\n    points.push(\"M\" + [-width, 0].join(\",\"));\r\n    points.push([width, 0].join(\",\"));\r\n    points.push(\"Q\" + [width * 2, height / 2].join(\",\"));\r\n    points.push([width, height].join(\",\"));\r\n    points.push(\"Q\" + [width * 0.5, arch].join(\",\"));\r\n    points.push([0, height].join(\",\"));\r\n    points.push(\"Q\" + [width * -0.5, arch].join(\",\"));\r\n    points.push([-width, height].join(\",\"));\r\n    points.push(\"Q\" + [-(width * 2), height / 2].join(\",\"));\r\n    points.push([-width, 0].join(\",\"));\r\n\r\n    var path = points.join(\" \");\r\n    if (!cloud.path) cloud.path = cloud.group.path();\r\n    cloud.path.animate(\r\n      {\r\n        d: path,\r\n      },\r\n      0\r\n    );\r\n  }\r\n\r\n  function makeSplash(x, type) {\r\n    // 💦 The splash is a single line added to the outer svg.\r\n\r\n    // The splashLength is how long the animated line will be\r\n    var splashLength = type === \"thunder\" ? 30 : 20;\r\n\r\n    // splashBounce is the max height the line will curve up\r\n    // before falling\r\n    var splashBounce = type === \"thunder\" ? 120 : 100;\r\n\r\n    // this sets how far down the line can fall\r\n    var splashDistance = 80;\r\n\r\n    // because the storm rain is longer we want the animation\r\n    // to last slighly longer so the overall speed is roughly\r\n    // the same for both\r\n    var speed = type === \"thunder\" ? 0.7 : 0.5;\r\n\r\n    // Set a random splash up amount based on the max splash bounce\r\n    var splashUp = 0 - Math.random() * splashBounce;\r\n\r\n    // Sets the end x position, and in turn defines the splash direction\r\n    var randomX = Math.random() * splashDistance - splashDistance / 2;\r\n\r\n    // Now we put the 3 line coordinates into an array.\r\n\r\n    var points = [];\r\n    points.push(\"M\" + 0 + \",\" + 0);\r\n    points.push(\"Q\" + randomX + \",\" + splashUp);\r\n    points.push(randomX * 2 + \",\" + splashDistance);\r\n\r\n    // Draw the line with Snap SVG\r\n\r\n    var splash = outerSplashHolder.path(points.join(\" \")).attr({\r\n      fill: \"none\",\r\n      stroke: type === \"thunder\" ? \"#777\" : \"#0000ff\",\r\n      strokeWidth: 1,\r\n    });\r\n\r\n    // We animate the dasharray to have the line travel along the path\r\n\r\n    var pathLength = Snap.path.getTotalLength(splash);\r\n    var xOffset = sizes.card.offset.left; //(sizes.container.width - sizes.card.width) / 2\r\n    var yOffset = sizes.card.offset.top + sizes.card.height;\r\n    splash.node.style.strokeDasharray = splashLength + \" \" + pathLength;\r\n\r\n    // Start the splash animation, calling onSplashComplete when finished\r\n    TweenMax.fromTo(\r\n      splash.node,\r\n      speed,\r\n      {\r\n        strokeWidth: 2,\r\n        y: yOffset,\r\n        x: xOffset + 20 + x,\r\n        opacity: 1,\r\n        strokeDashoffset: splashLength,\r\n      },\r\n      {\r\n        strokeWidth: 0,\r\n        strokeDashoffset: -pathLength,\r\n        opacity: 1,\r\n        onComplete: onSplashComplete,\r\n        onCompleteParams: [splash],\r\n        ease: SlowMo.ease.config(0.4, 0.1, false),\r\n      }\r\n    );\r\n  }\r\n\r\n  function onSplashComplete(splash) {\r\n    // 💦 The splash has finished animating, we need to get rid of it\r\n\r\n    splash.remove();\r\n    splash = null;\r\n  }\r\n\r\n  function makeRain() {\r\n    // 💧 This is where we draw one drop of rain\r\n\r\n    // first we set the line width of the line, we use this\r\n    // to dictate which svg group it'll be added to and\r\n    // whether it'll generate a splash\r\n\r\n    var lineWidth = Math.random() * 3;\r\n\r\n    // ⛈ line length is made longer for stormy weather\r\n\r\n    var lineLength = weatherType === \"thunder\" ? 35 : 14;\r\n\r\n    // Start the drop at a random point at the top but leaving\r\n    // a 20px margin\r\n\r\n    var x = Math.random() * (sizes.card.width - 40) + 20;\r\n\r\n    // Draw the line\r\n\r\n    var line = innerRainHolder[\"innerRainHolder\" + (3 - Math.floor(lineWidth))]\r\n      .path(\"M0,0 0,\" + lineLength)\r\n      .attr({\r\n        fill: \"none\",\r\n        stroke: weatherType === \"thunder\" ? \"#777\" : \"#0000ff\",\r\n        strokeWidth: lineWidth,\r\n      });\r\n\r\n    // add the line to an array to we can keep track of how\r\n    // many there are.\r\n\r\n    rain.push(line);\r\n\r\n    // Start the falling animation, calls onRainEnd when the\r\n    // animation finishes.\r\n\r\n    TweenMax.fromTo(\r\n      line.node,\r\n      1,\r\n      { x: x, y: 0 - lineLength },\r\n      {\r\n        delay: Math.random(),\r\n        y: sizes.card.height,\r\n        ease: Power2.easeIn,\r\n        onComplete: onRainEnd,\r\n        onCompleteParams: [line, lineWidth, x, weatherType],\r\n      }\r\n    );\r\n  }\r\n\r\n  function onRainEnd(line, width, x, type) {\r\n    // first lets get rid of the drop of rain 💧\r\n\r\n    line.remove();\r\n    line = null;\r\n\r\n    // We also remove it from the array\r\n\r\n    for (var i in rain) {\r\n      if (!rain[i].paper) rain.splice(i, 1);\r\n    }\r\n\r\n    // If there is less rain than the rainCount we should\r\n    // make more.\r\n\r\n    if (rain.length < settings.rainCount) {\r\n      makeRain();\r\n\r\n      // 💦 If the line width was more than 2 we also create a\r\n      // splash. This way it looks like the closer (bigger)\r\n      // drops hit the the edge of the card\r\n\r\n      if (width > 2) makeSplash(x, type);\r\n    }\r\n  }\r\n\r\n  function makeLeaf() {\r\n    var scale = 0.5 + Math.random() * 0.5;\r\n    var newLeaf;\r\n\r\n    var areaY = sizes.card.height / 2;\r\n    var y = areaY + Math.random() * areaY;\r\n    var endY = y - (Math.random() * (areaY * 2) - areaY);\r\n    var x;\r\n    var endX;\r\n    var colors = [\"#76993E\", \"#4A5E23\", \"#6D632F\"];\r\n    var color = colors[Math.floor(Math.random() * colors.length)];\r\n    var xBezier;\r\n\r\n    if (scale > 0.8) {\r\n      newLeaf = leaf.clone().appendTo(outerLeafHolder).attr({\r\n        fill: color,\r\n      });\r\n      y = y + sizes.card.offset.top / 2;\r\n      endY = endY + sizes.card.offset.top / 2;\r\n\r\n      x = sizes.card.offset.left - 100;\r\n      xBezier = x + (sizes.container.width - sizes.card.offset.left) / 2;\r\n      endX = sizes.container.width + 50;\r\n    } else {\r\n      newLeaf = leaf.clone().appendTo(innerLeafHolder).attr({\r\n        fill: color,\r\n      });\r\n      x = -100;\r\n      xBezier = sizes.card.width / 2;\r\n      endX = sizes.card.width + 50;\r\n    }\r\n\r\n    leafs.push(newLeaf);\r\n\r\n    var bezier = [\r\n      { x: x, y: y },\r\n      { x: xBezier, y: Math.random() * endY + endY / 3 },\r\n      { x: endX, y: endY },\r\n    ];\r\n    TweenMax.fromTo(\r\n      newLeaf.node,\r\n      2,\r\n      { rotation: Math.random() * 180, x: x, y: y, scale: scale },\r\n      {\r\n        rotation: Math.random() * 360,\r\n        bezier: bezier,\r\n        onComplete: onLeafEnd,\r\n        onCompleteParams: [newLeaf],\r\n        ease: Power0.easeIn,\r\n      }\r\n    );\r\n  }\r\n\r\n  function onLeafEnd(leaf) {\r\n    leaf.remove();\r\n    leaf = null;\r\n\r\n    for (var i in leafs) {\r\n      if (!leafs[i].paper) leafs.splice(i, 1);\r\n    }\r\n\r\n    if (leafs.length < settings.leafCount) {\r\n      makeLeaf();\r\n    }\r\n  }\r\n\r\n  function makeSnow() {\r\n    var scale = 0.5 + Math.random() * 0.5;\r\n    var newSnow;\r\n\r\n    var x = 20 + Math.random() * (sizes.card.width - 40);\r\n    var y = -10;\r\n    var endY;\r\n\r\n    if (scale > 0.8) {\r\n      newSnow = outerSnowHolder.circle(0, 0, 5).attr({\r\n        fill: \"white\",\r\n      });\r\n      endY = sizes.container.height + 10;\r\n      y = sizes.card.offset.top + settings.cloudHeight;\r\n      x = x + sizes.card.offset.left;\r\n    } else {\r\n      newSnow = innerSnowHolder.circle(0, 0, 5).attr({\r\n        fill: \"white\",\r\n      });\r\n      endY = sizes.card.height + 10;\r\n    }\r\n\r\n    snow.push(newSnow);\r\n\r\n    TweenMax.fromTo(\r\n      newSnow.node,\r\n      3 + Math.random() * 5,\r\n      { x: x, y: y },\r\n      {\r\n        y: endY,\r\n        onComplete: onSnowEnd,\r\n        onCompleteParams: [newSnow],\r\n        ease: Power0.easeIn,\r\n      }\r\n    );\r\n    TweenMax.fromTo(\r\n      newSnow.node,\r\n      1,\r\n      { scale: 0 },\r\n      { scale: scale, ease: Power1.easeInOut }\r\n    );\r\n    TweenMax.to(newSnow.node, 3, {\r\n      x: x + (Math.random() * 150 - 75),\r\n      repeat: -1,\r\n      yoyo: true,\r\n      ease: Power1.easeInOut,\r\n    });\r\n  }\r\n\r\n  function onSnowEnd(flake) {\r\n    flake.remove();\r\n    flake = null;\r\n\r\n    for (var i in snow) {\r\n      if (!snow[i].paper) snow.splice(i, 1);\r\n    }\r\n\r\n    if (snow.length < settings.snowCount) {\r\n      makeSnow();\r\n    }\r\n  }\r\n\r\n  function reset() {\r\n    container.removeClass(\"rain wind clouds thunder sun\");\r\n  }\r\n\r\n  function makeWeather(weather) {\r\n    if (weather.data) weather = weather.data;\r\n    reset();\r\n    weatherType = weather;\r\n\r\n    TweenMax.killTweensOf(summary);\r\n    TweenMax.to(summary, 1, {\r\n      opacity: 1,\r\n      x: 0,\r\n      ease: Power4.easeIn,\r\n    });\r\n\r\n    container.addClass(weatherType);\r\n\r\n    // windSpeed\r\n\r\n    switch (weatherType) {\r\n      case \"wind\":\r\n        TweenMax.to(settings, 3, {\r\n          windSpeed: 3,\r\n          ease: Power2.easeInOut,\r\n        });\r\n        break;\r\n      case \"sun\":\r\n        TweenMax.to(settings, 3, {\r\n          windSpeed: 20,\r\n          ease: Power2.easeInOut,\r\n        });\r\n        break;\r\n      default:\r\n        TweenMax.to(settings, 3, {\r\n          windSpeed: 0.5,\r\n          ease: Power2.easeOut,\r\n        });\r\n        break;\r\n    }\r\n\r\n    // rainCount\r\n\r\n    switch (weatherType) {\r\n      case \"rain\":\r\n        TweenMax.to(settings, 3, {\r\n          rainCount: 10,\r\n          ease: Power2.easeInOut,\r\n        });\r\n        break;\r\n      case \"thunder\":\r\n        TweenMax.to(settings, 3, {\r\n          rainCount: 60,\r\n          ease: Power2.easeInOut,\r\n        });\r\n        break;\r\n      default:\r\n        TweenMax.to(settings, 1, { rainCount: 0, ease: Power2.easeOut });\r\n        break;\r\n    }\r\n\r\n    // leafCount\r\n\r\n    switch (weatherType) {\r\n      case \"wind\":\r\n        TweenMax.to(settings, 3, {\r\n          leafCount: 5,\r\n          ease: Power2.easeInOut,\r\n        });\r\n        break;\r\n      default:\r\n        TweenMax.to(settings, 1, { leafCount: 0, ease: Power2.easeOut });\r\n        break;\r\n    }\r\n\r\n    // snowCount\r\n\r\n    switch (weatherType) {\r\n      case \"snow\":\r\n        TweenMax.to(settings, 3, {\r\n          snowCount: 40,\r\n          ease: Power2.easeInOut,\r\n        });\r\n        break;\r\n      default:\r\n        TweenMax.to(settings, 1, { snowCount: 0, ease: Power2.easeOut });\r\n        break;\r\n    }\r\n\r\n    // sun position\r\n\r\n    switch (weatherType) {\r\n      case \"sun\":\r\n        TweenMax.to(sun.node, 4, {\r\n          x: sizes.card.width / 2,\r\n          y: sizes.card.height / 2,\r\n          ease: Power2.easeInOut,\r\n        });\r\n        // TweenMax.to(sunburst.node, 4, {\r\n        //   scale: 1,\r\n        //   opacity: 0.8,\r\n        //   y: sizes.card.height / 2 + sizes.card.offset.top,\r\n        //   ease: Power2.easeInOut,\r\n        // });\r\n        break;\r\n      default:\r\n        TweenMax.to(sun.node, 2, {\r\n          x: sizes.card.width / 2,\r\n          y: -100,\r\n          leafCount: 0,\r\n          ease: Power2.easeInOut,\r\n        });\r\n        TweenMax.to(sunburst.node, 2, {\r\n          scale: 0.4,\r\n          opacity: 0,\r\n          y: sizes.container.height / 2 - 50,\r\n          ease: Power2.easeInOut,\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  function startLightningTimer() {\r\n    if (lightningTimeout) clearTimeout(lightningTimeout);\r\n    if (weatherType === \"thunder\") {\r\n      lightningTimeout = setTimeout(lightning, Math.random() * 6000);\r\n    }\r\n  }\r\n\r\n  function lightning() {\r\n    startLightningTimer();\r\n    TweenMax.fromTo(card, 0.75, { y: -30 }, { y: 0, ease: window.Elastic.easeOut });\r\n\r\n    var pathX = 30 + Math.random() * (sizes.card.width - 60);\r\n    var yOffset = 20;\r\n    var steps = 20;\r\n    var points = [pathX + \",0\"];\r\n    for (var i = 0; i < steps; i++) {\r\n      var x = pathX + (Math.random() * yOffset - yOffset / 2);\r\n      var y = (sizes.card.height / steps) * (i + 1);\r\n      points.push(x + \",\" + y);\r\n    }\r\n\r\n    var strike = weatherContainer1.path(\"M\" + points.join(\" \")).attr({\r\n      fill: \"none\",\r\n      stroke: \"white\",\r\n      strokeWidth: 2 + Math.random(),\r\n    });\r\n\r\n    TweenMax.to(strike.node, 1, {\r\n      opacity: 0,\r\n      ease: Power4.easeOut,\r\n      onComplete: function () {\r\n        strike.remove();\r\n        strike = null;\r\n      },\r\n    });\r\n  }\r\n\r\n  startLightningTimer();\r\n  \r\n  return {\r\n    makeWeather,\r\n  };\r\n};\r\nexport default WeatherAnimation;\r\n","import { API_WEATHER_ICON_URL } from \"../constants/api\";\r\n\r\nexport const getUnixTime = (timestap) => {\r\n  var date = new Date(timestap * 1000);\r\n  // Hours part from the timestamp\r\n  var hours = date.getHours();\r\n  // Minutes part from the timestamp\r\n  var minutes = \"0\" + date.getMinutes();\r\n  // Seconds part from the timestamp\r\n  var seconds = \"0\" + date.getSeconds();\r\n  var result = {\r\n    date: date,\r\n    hours: hours,\r\n    minutes: minutes,\r\n    seconds: seconds,\r\n  };\r\n  return result;\r\n};\r\n\r\nexport const jsUcfirst = (string) => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n};\r\nexport const getIconWeather = (icon) => {\r\n  if (typeof icon != \"undefined\") {\r\n    return `${API_WEATHER_ICON_URL}${icon}@2x.png`;\r\n  }\r\n};\r\n","export const API_WEATHER_KEY = \"cfb1bce5b728d5beeb54bc7cba078ca6\";\r\nexport const API_WEATHER_URL = \"https://api.openweathermap.org/data/2.5/\";\r\nexport const API_FREEGEOIP_URL = \"https://freegeoip.app/json/\";\r\nexport const API_WEATHER_ICON_URL = \"https://openweathermap.org/img/wn/\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUnixTime, getIconWeather } from \"../../commons/Helper\";\r\nimport \"./style.css\";\r\nimport { Tab, TabList, TabPanel, Tabs } from \"react-tabs\";\r\n\r\n// const tabIcons = [\r\n//   {\r\n//     icon: \"wi-thermometer-exterior\",\r\n//     id: 1,\r\n//   },\r\n//   {\r\n//     icon: \"wi-horizon-alt\",\r\n//     id: 2,\r\n//   },\r\n//   {\r\n//     icon: \"wi-rain\",\r\n//     id: 3,\r\n//   },\r\n// ];\r\nclass WeatherPanel extends Component {\r\n  renderSelectDay = () => {\r\n    var days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n    var d = new Date();\r\n    var currentDay = days[d.getDay()];\r\n\r\n    // var options = days.map((day, index) => {\r\n    //   return (\r\n    //     <Option value={day} key={index}>\r\n    //       {day}\r\n    //     </Option>\r\n    //   );\r\n    // });\r\n    //   <Select\r\n    //   defaultValue={currentDay}\r\n    //   style={{ width: 120 }}\r\n    //   className=\"select-date\"\r\n    // >\r\n    //   {options}\r\n    // </Select>\r\n    return <p style={{ margin: 0 }}>{currentDay}</p>;\r\n  };\r\n\r\n  renderTempItem = (hourlyWeather) => {\r\n    var result;\r\n    result = hourlyWeather.map((item, index) => {\r\n      return (\r\n        <div className=\"temp-item\" key={index}>\r\n          <p>{getUnixTime(item.dt).hours}h</p>\r\n          <img alt=\"weather-icon\" src={getIconWeather(item.weather[0].icon)} />\r\n          <span>{parseInt(item.temp)}&ordm;</span>\r\n        </div>\r\n      );\r\n    });\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n    const { weather } = this.props;\r\n    const tabs = [];\r\n    const tabPanels = [];\r\n    tabs.push(\r\n      <Tab key=\"temp\">\r\n        <span\r\n          className=\"iconify\"\r\n          data-icon=\"wi-thermometer-exterior\"\r\n          data-inline=\"false\"\r\n        ></span>\r\n      </Tab>\r\n    );\r\n    tabPanels.push(\r\n      <TabPanel key=\"temp\">\r\n        <div className=\"temp-panel\">\r\n          <div className=\"temp-item\">\r\n            <p>Now</p>\r\n            <img\r\n              alt=\"weather-icon\"\r\n              src={\r\n                weather.icon\r\n                  ? getIconWeather(weather.icon)\r\n                  : \"https://openweathermap.org/img/wn/04d@2x.png\"\r\n              }\r\n            />\r\n            <span>{parseInt(weather.temp)}&ordm;</span>\r\n          </div>\r\n          {this.renderTempItem(weather.hourly)}\r\n        </div>\r\n      </TabPanel>\r\n    );\r\n\r\n    // tabIcons.map((item, index) => {\r\n    //   var { icon, id } = item;\r\n    // });\r\n    return (\r\n      <Tabs>\r\n        <div className=\"weather-panel\">\r\n          <div className=\"weather-panel-left\">{this.renderSelectDay()}</div>\r\n          <div className=\"weather-panel-right\">\r\n            <TabList className=\"weather-panel-tab\">{tabs}</TabList>\r\n          </div>\r\n        </div>\r\n        {tabPanels}\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nvar mapStateToProps = (state) => {\r\n  return {\r\n    weather: state.weather,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(WeatherPanel);\r\n","export const SNOW = \"snow\";\r\nexport const WIND = \"wind\";\r\nexport const CLOUDS = \"clouds\";\r\nexport const RAIN = \"rain\";\r\nexport const THUNDER = \"thunder\";\r\nexport const SUN = \"sun\";\r\n\r\nexport const WEATHER_CODE = {\r\n  Thunderstorm: THUNDER,\r\n  Drizzle: WIND,\r\n  Clouds: CLOUDS,\r\n  Rain: RAIN,\r\n  Snow: SNOW,\r\n  Clear: SUN,\r\n};\r\n","import * as actTypes from \"../../constants/actionTypes\";\r\n\r\nexport const getWeatherByGeographic = () => {\r\n  return {\r\n    type: actTypes.GET_WEATHER_BY_GEOGRAPHIC,\r\n  };\r\n};\r\n\r\nexport const getWeatherByGeographicSuccess = (weather) => {\r\n  return {\r\n    type: actTypes.GET_WEATHER_BY_GEOGRAPHIC_SUCCESS,\r\n    payload: { weather },\r\n  };\r\n};\r\n\r\nexport const getWeatherByGeographicFail = (error) => {\r\n  return {\r\n    type: actTypes.GET_WEATHER_BY_GEOGRAPHIC_FAIL,\r\n    payload: { error },\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ReactComponent as WeatherOverlay } from \"../../assets/imgs/WeatherOverlay.svg\";\r\nimport WeatherAnimation from \"../../assets/libs/WeatherAnimation\";\r\nimport WeatherPanel from \"../WeatherPanel\";\r\nimport * as weatherType from \"../../constants/weatherType\";\r\nimport * as actWeather from \"../../store/actions/weather\";\r\nimport { jsUcfirst, getIconWeather } from \"../../commons/Helper\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./style.css\";\r\n\r\nclass WeatherCard extends Component {\r\n  componentDidUpdate() {\r\n    var { weather } = this.props;\r\n    var weatherCode = weatherType.WEATHER_CODE[weather.main];\r\n    if (weatherCode) {\r\n      // this.weatherAni.makeWeather(\"thunder\");\r\n      this.weatherAni.makeWeather(weatherCode);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    var { weather } = this.props;\r\n    var weatherCode = weatherType.WEATHER_CODE[weather.main];\r\n    this.weatherAni = WeatherAnimation(weatherCode);\r\n  }\r\n\r\n  render() {\r\n    var { weather } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <WeatherOverlay></WeatherOverlay>\r\n        <div id=\"card\" className=\"weather\">\r\n          <svg id=\"inner\">\r\n            <defs>\r\n              <path\r\n                id=\"leaf\"\r\n                d=\"M41.9,56.3l0.1-2.5c0,0,4.6-1.2,5.6-2.2c1-1,3.6-13,12-15.6c9.7-3.1,19.9-2,26.1-2.1c2.7,0-10,23.9-20.5,25 c-7.5,0.8-17.2-5.1-17.2-5.1L41.9,56.3z\"\r\n              />\r\n            </defs>\r\n            <circle id=\"sun\" style={{ fill: \"#F7ED47\" }} cx=\"0\" cy=\"0\" r=\"50\" />\r\n            <g id=\"layer3\"></g>\r\n            <g id=\"cloud3\" className=\"cloud\"></g>\r\n            <g id=\"layer2\"></g>\r\n            <g id=\"cloud2\" className=\"cloud\"></g>\r\n            <g id=\"layer1\"></g>\r\n            <g id=\"cloud1\" className=\"cloud\"></g>\r\n          </svg>\r\n          <div className=\"details\">\r\n            <div className=\"left\">\r\n              <div className=\"temp\">\r\n                {weather.temp ? parseInt(weather.temp) : \"_\"}\r\n                <span>&ordm;</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"right\">\r\n              <div className=\"icon\">\r\n                <img\r\n                  alt=\"weather-icon\"\r\n                  src={\r\n                    weather.icon\r\n                      ? getIconWeather(weather.icon)\r\n                      : \"https://openweathermap.org/img/wn/04d@2x.png\"\r\n                  }\r\n                />\r\n              </div>\r\n              <div id=\"summary\">{jsUcfirst(weather.description)}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bottom\">\r\n            <WeatherPanel></WeatherPanel>\r\n          </div>\r\n        </div>\r\n        <svg id=\"outer\"></svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nWeatherCard.propsTypes = {\r\n  description: PropTypes.string,\r\n  temp: PropTypes.number,\r\n  icon: PropTypes.string,\r\n};\r\n\r\nvar mapStateToProps = (state) => {\r\n  return {\r\n    location: state.location,\r\n    weather: state.weather,\r\n  };\r\n};\r\nvar mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    actionsWeather: bindActionCreators(actWeather, dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherCard);\r\n","import React, { Component } from \"react\";\r\nimport cities from \"./cities.json\";\r\nimport { AutoComplete } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./style.scss\";\r\nimport { setLocation } from \"../../store/actions/location\";\r\n\r\nconst { Option } = AutoComplete;\r\n\r\nconst removeAccents = (str) => {\r\n  return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n};\r\nclass SearchLocation extends Component {\r\n  renderOptions = () => {\r\n    return cities.map((item, index) => {\r\n      if (item.capital === \"admin\" || item.capital === \"primary\") {\r\n        return (\r\n          <Option key={index} value={item.admin} lat={item.lat} lng={item.lng}>\r\n            {item.admin}\r\n          </Option>\r\n        );\r\n      }\r\n      return '';\r\n    });\r\n  };\r\n\r\n  filterOption = (inputValue, option) => {\r\n    return (\r\n      removeAccents(option.value.toUpperCase()).indexOf(\r\n        removeAccents(inputValue.toUpperCase())\r\n      ) !== -1\r\n    );\r\n  };\r\n  onSelect = (value, option) => {\r\n    var { lat, lng } = option;\r\n    this.props.setLocation({ lat, lng });\r\n  };\r\n  render() {\r\n    return (\r\n      <AutoComplete\r\n        className={classes.SearchLocation}\r\n        style={{ width: 300 }}\r\n        placeholder=\"Enter location\"\r\n        filterOption={this.filterOption}\r\n        onSelect={this.onSelect}\r\n        allowClear={true}\r\n        notFoundContent=\"Not Found\"\r\n      >\r\n        {this.renderOptions()}\r\n      </AutoComplete>\r\n    );\r\n  }\r\n}\r\n\r\nvar mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setLocation: (location) => dispatch(setLocation(location)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SearchLocation);\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setCurrentLocation } from \"./store/actions/location\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport SearchLocation from \"./components/SearchLocation\";\nimport \"./app.css\";\nclass App extends Component {\n  componentDidMount() {\n    this.props.setCurrentLocation();\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchLocation></SearchLocation>\n        <WeatherCard></WeatherCard>\n      </div>\n    );\n  }\n}\n\nvar mapStateToProps = (state) => {\n  return {\n    location: state.location,\n  };\n};\nvar mapDispatchToProps = (dispatch) => {\n  return {\n    setCurrentLocation: () => dispatch(setCurrentLocation()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//custom axios\r\n\r\nimport axios from \"axios\";\r\nclass AxiosService {\r\n  constructor() {\r\n    const instance = axios.create();\r\n    instance.interceptors.response.use(this.handleSuccess, this.handleError);\r\n    this.instance = instance;\r\n  }\r\n\r\n  handleSuccess = (res) => {\r\n    return res;\r\n  };\r\n\r\n  handleError = (err) => {\r\n    return Promise.reject(err);\r\n  };\r\n\r\n  get(url) {\r\n    return this.instance.get(url);\r\n  }\r\n\r\n  post(url, data) {\r\n    return this.instance.post(url, data);\r\n  }\r\n\r\n  add(url, data) {\r\n    return this.instance.post(url, data);\r\n  }\r\n\r\n  delete(url) {\r\n    return this.instance.delete(url);\r\n  }\r\n\r\n  update(url, data) {\r\n    return this.instance.put(url, data);\r\n  }\r\n}\r\n\r\nexport default new AxiosService();\r\n","import * as apiConstants from \"../constants/api\";\r\nimport AxiosService from \"../commons/AxiosService\";\r\n\r\nexport const getWeatherByGeographic = (location) => {\r\n  return AxiosService.get(\r\n    `${apiConstants.API_WEATHER_URL}onecall?lat=${location.lat}&lon=${location.lng}&exclude=minutely,daily&units=metric&appid=${apiConstants.API_WEATHER_KEY}`\r\n  );\r\n};\r\n","import * as apiConstants from \"../constants/api\";\r\nimport AxiosService from \"../commons/AxiosService\";\r\nexport const getUserLocation = () => {\r\n  return new Promise((resolve, reject) => {\r\n    AxiosService.get(`${apiConstants.API_FREEGEOIP_URL}`).then((res) => {\r\n      resolve({\r\n        lat: res.data.latitude,\r\n        lng: res.data.longitude,\r\n        status: res.status,\r\n      });\r\n    });\r\n  });\r\n};\r\n","import * as actTypes from \"../constants/actionTypes\";\r\nimport { take, fork, call, put } from \"redux-saga/effects\";\r\nimport * as locationAction from \"../store/actions/location\";\r\nimport {\r\n  getWeatherByGeographicFail,\r\n  getWeatherByGeographicSuccess,\r\n} from \"../store/actions/weather\";\r\nimport { getWeatherByGeographic } from \"../apis/openweathermap\";\r\nimport { getUserLocation } from \"../apis/freegeoip\";\r\n\r\n// const getUserLocation = () =>\r\n//   new Promise((resolve, reject) => {\r\n//     navigator.geolocation.getCurrentPosition(\r\n//       (location) => resolve({ location, status: 200 }),\r\n//       (error) => reject({ error, status: 404 })\r\n//     );\r\n//   });\r\n\r\nfunction* watchSetCurrentLocation() {\r\n  while (true) {\r\n    yield take(actTypes.SET_CURRENT_LOCATION);\r\n    var res = yield call(getUserLocation);\r\n    if (res.status !== 200) {\r\n      yield put(locationAction.setLocationFail(res.error));\r\n      return;\r\n    }\r\n    yield put(\r\n      locationAction.setLocation({\r\n        lat: res.lat,\r\n        lng: res.lng,\r\n      })\r\n    );\r\n  }\r\n}\r\nfunction* watchSetLocation() {\r\n  while (true) {\r\n    var resTake = yield take(actTypes.SET_LOCATION);\r\n    var { location } = resTake.payload;\r\n    if (location) {\r\n      yield put(\r\n        locationAction.setLocationSuccess({\r\n          lat: location.lat,\r\n          lng: location.lng,\r\n        })\r\n      );\r\n      var resWeather = yield call(getWeatherByGeographic, {\r\n        lat: location.lat,\r\n        lng: location.lng,\r\n      });\r\n      if (resWeather.status !== 200) {\r\n        yield put(getWeatherByGeographicFail(resWeather.error));\r\n        return;\r\n      }\r\n      var currentWeather = resWeather.data.current;\r\n      var hourlyWeather = resWeather.data.hourly.slice(1, 5);\r\n      var weather = {\r\n        clouds: currentWeather.clouds,\r\n        temp: currentWeather.temp,\r\n        icon: currentWeather.weather[0].icon,\r\n        description: currentWeather.weather[0].description,\r\n        id: currentWeather.weather[0].id,\r\n        main: currentWeather.weather[0].main,\r\n        time: currentWeather.dt,\r\n        hourly: hourlyWeather,\r\n      };\r\n      yield put(getWeatherByGeographicSuccess(weather));\r\n    }\r\n  }\r\n}\r\n\r\nfunction* rootSaga() {\r\n  yield fork(watchSetLocation);\r\n  yield fork(watchSetCurrentLocation);\r\n}\r\n\r\nexport default rootSaga;\r\n","import * as actTypes from \"../../constants/actionTypes\";\r\n\r\nconst initState = {};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  var { payload } = action;\r\n  switch (action.type) {\r\n    case actTypes.SET_LOCATION_SUCCESS:\r\n      state = { lat: payload.location.lat, lng: payload.location.lng };\r\n      return { ...state };\r\n    case actTypes.SET_LOCATION_FAIL:\r\n      return { ...state };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actTypes from \"../../constants/actionTypes\";\r\n\r\nconst initState = {\r\n  clouds: {},\r\n  temp: 0,\r\n  description: \"\",\r\n  main: \"\",\r\n  id: 0,\r\n  hourly:[]\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  var { payload } = action;\r\n  switch (action.type) {\r\n    case actTypes.GET_WEATHER_BY_GEOGRAPHIC_SUCCESS:\r\n      state = { ...payload.weather };\r\n      return { ...state };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport location from \"./location\";\r\nimport weather from \"./weather\";\r\n\r\nconst rootReducer = combineReducers({ location, weather });\r\n\r\nexport default rootReducer;\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/rootSaga\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nvar composeEnhancer =\r\n  process.env.NODE_ENV !== \"production\" &&\r\n  typeof window === \"object\" &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ shouldHotReload: false })\r\n    : compose;\r\n\r\nconst initStore = () => {\r\n  const middlewares = [sagaMiddleware];\r\n  const enhancers = [applyMiddleware(...middlewares)];\r\n  var store = createStore(rootReducer, composeEnhancer(...enhancers));\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\nexport default initStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport 'antd/dist/antd.css';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport initStore from \"./store/configStore\";\nvar store = initStore();\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchLocation\":\"_2Ak_EBkcHqSzdopzvTcw-F\"};"],"sourceRoot":""}